name: Godot Export # this is the name that will be displayed in the GitHub Actions UI
on:
  workflow_dispatch:
    inputs:
      godot_version: # we can add any inputs we want here
        description: 'The version of Godot to use'
        type: choice # the type can be string, number, boolean, or choice
        required: true
        default: '4.4'
        options:
          - '4.4'
          - '4.3'
jobs:
  parse-export-presets:
    name: Parse Export Presets
    runs-on: ubuntu-latest
    outputs:
      # this will be used as the input for the matrix strategy
      matrix: ${{ steps.parse.outputs.matrix }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref_name }}

      - name: Parse Export Presets
        id: parse # this will be used to get the output of the step
        shell: python
        run: |
          import os
          import json
          import re

          # read the export_presets.cfg file
          with open("export_presets.cfg", "r") as f:
            lines = f.readlines()

          # this will hold the export presets
          export_presets = []

          # parse the file and create a list of export presets
          for line in lines:
            if line.strip() == "": # skip empty lines
              continue

            match = re.match(r"^\[preset\.(\d+)\]$", line)
            if match:
              preset_index = int(match.group(1))
              preset_name = None
              export_path = None
              continue

            match = re.match(r"^(.+)=\"(.*)\"$", line)
            if match:
              key = match.group(1)
              value = match.group(2)
              match key:
                case "name":
                  preset_name = value
                case "export_path":
                  export_path = value

            if preset_name == None or export_path == None:
              continue

            if preset_name == "":
              # skip empty preset names
              print(f"::warning::Skipped Preset {preset_index} \"\": name is empty")
            elif export_path == "":
              # skip empty export paths
              print(f"::warning::Skipped Preset {preset_index} \"{preset_name}\": export_path is empty")
            else:
              # add the export preset to the list
              export_presets.append({
                "preset": preset_name,
                "path": os.path.dirname(export_path),
                "artifact_name": preset_name.lower().replace(" ", "-") # this will be used as the name of the artifact
              })

            preset_name = None
            export_path = None

          matrix = {
            "export": export_presets
          }

          print(matrix)  # Print the matrix for debugging

          # write the export presets to the job output
          with open(os.environ["GITHUB_OUTPUT"], "w") as f:
            f.write(f"matrix={json.dumps(matrix, separators=(',', ':'))}\n")

  export:
    name: Export
    runs-on: ubuntu-latest
    needs: [parse-export-presets] # this job will run after the parse-export-presets job
    strategy:
      matrix: ${{ fromJson(needs.parse-export-presets.outputs.matrix) }} # this will be used to get the matrix from the previous job
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref_name }}

      - name: Download Godot
        uses: robinraju/release-downloader@v1
        with:
          repository: godotengine/godot
          tag: ${{ inputs.godot_version }}-stable
          filename: Godot_v${{ inputs.godot_version }}-stable_linux.x86_64.zip
          extract: true

      - name: Make Godot Executable
        shell: bash
        run: |
          mv Godot_v${{ inputs.godot_version }}-stable_linux.x86_64 godot_stable_linux.x86_64
          chmod +x godot_stable_linux.x86_64

      - name: Download Godot Templates
        uses: robinraju/release-downloader@v1
        with:
          repository: godotengine/godot
          tag: ${{ inputs.godot_version }}-stable
          filename: Godot_v${{ inputs.godot_version }}-stable_export_templates.tpz

      - name: Extract Godot Templates
        shell: bash
        env:
          TEMPLATE_DIR: ~/.local/share/godot/export_templates/${{ inputs.godot_version }}.stable
        run: |
          mkdir -p ${{ env.TEMPLATE_DIR }}
          unzip -j Godot_v${{ inputs.godot_version }}-stable_export_templates.tpz templates/* -d ${{ env.TEMPLATE_DIR }}

      - name: Export Project # this will run the export for each preset in the matrix
        shell: bash
        run: |
          mkdir -p ${{ matrix.export.path }}
          ./godot_stable_linux.x86_64 --headless --verbose --export-release "${{ matrix.export.preset }}"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.export.artifact_name }} # this is the name of the artifact that will be created
          path: ${{ matrix.export.path }} # this is the path to the exported files
  deploy-gh-pages:
    name: Deploy to GitHub Pages
    needs: [export] # this job will run after the export job

    permissions: # this is required to deploy to GitHub Pages
      pages: write
      id-token: write

    environment: # this creates a deployment environment on GitHub that points to the GitHub Pages URL
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: web
          # this is the path that actions/upload-pages-artifact@v3 uploads by default
          path: _site

      - name: Upload GitHub Pages Artifact
        uses: actions/upload-pages-artifact@v3

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
